Promises :

    can land up in  states :

    1. Pending 
    2. Fullfill
    3. Rejected

    Promise in js is object that holds these properties :

        [[PromiseState]]: "pending"
        [[PromiseResult]]: undefined

        Here PromiseState is already discussed and can fall into 3 states :
        1. pending 
        2. fullfilled
        3. Rejected

        PromiseResult can be : 
            When state of promise is "Pending", at that time...PromiseResult will be undefined 
            when state of promise is "fullfilled" or "Rejected", at that time...PromiseResult
            will hold some DATA.


            Syntax:

            let promise = new Promise(<callback_fn>) :
            <callback_fn> is also known as executor.
            now this <callback_fn> takes 2 calbacks as input.
            General name convention of these callback is - resolve and reject.

            here resolve is called whenever we want promise state to change to "fullfilled".
            Reject is called whenever we want promise state to change to "Rejected".

            here, promiseOBJ is an object that has  3 built in methods :

            1. then :

                promiseOBJ.then(<callback_fn>)..
                here then() method takes callback as input nad this callback function will be triggered whenever 
                promise state is changed to Fullfill.
                this callback_fn will get some data as input...bsically whatever data is 
                supplied to resilve method...same data will be given as input to this <callback_fn>
                
                NOTE:
                 Also then() method returns Promise
 
            2. Catch
            3. finally

        