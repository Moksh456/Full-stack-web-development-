CSS -> cascading style sheet..
                    html is the the structure and skelton. 
 
css   use case --> 1.to style there html tags.
                   2. to provide to change / alter layout 

implemenation of css in html?
                 there are 3 ways to apply css in html--?

                    1. inline element >with the help of style attribute.
 
                                    eg. <h1 style= background color: red; ></h1>
                    2. internal --> in the internal method style attribute convert into style tag and it lie in the head tga.

                                <head >
                                <style> 
                                        h1{
                                            background color : red;
                                        }
                                </style>
                                   </head>
                                           
                    3. external -> with he help of link tag.
                                    <link rel="style sheet" src="css file name"

 
                                    css syntax--> selector{
                                        css_property_name: value
                                    }


css want to know which one tag which you want to apply css.

            In the css  we have three ways to apply css in html file.

        que1.     the quetion is in the three ways which is the way html file     select for apply. means which have more priority then other ways ?

        ans-> the ans is the inline tag is get more priority and second is internal way and third priority is give to external. 

        ________________________________________________________________________
    
during html lecture:-
 we used to talk on 2 attibutes 
  id(), class

  these both attribute is used to in css file 
  id() tag is used to edit a individiual html code id tag is used with the help of # hash. 
    class attribute is used to edit a all tag. class attribute is used with the help of . dot.
    
    selectors in css :-
            1. element selector :
                 p{}
                 div{}

            2. id selector :
                #id_name{}

            3.  Class selector :
                .Class_Name{} 

            4. class selector with element :
                            <element?":> gfvzn
                        _Name> <class_name> 
                        eg. p.bgcolor -> applying css only those which are having class bgcolor.
            5. global selector  :
                    Symbol - *

    combinator selector :-
     combination of more than one selector.

 
                    1.  dedcendent selector
                        <Selector> <space> <selector2>..... {

                        }
                       -> all selector (all children/grand children) under selector1(parent ) should be seleted.
                       space is compulsry in decendent selector.
             2. child selector --> 
                                syntax: 
                                        <selector1 > < > > <selector2>........

             3. sibling selector (~)   :
                                    this selector is used to apply css on external html tag.
                             eg.-->       <selector> <~> <selector1>  .........
                                    {    
                                    } 
             4. adjecnt selector(+):
                        this selector is used to apply css on the nearest html tag.
                         eg.    <selector> <+> <selector1>      

________________________________________________________________________

pseudo elements :
 
            usecase:
               -->  to style html tags before/after.
               -->  to style first letter / first sentence

                 syntax:
                     <selector>:: <pseudo_element>
                     
  

            1. first letter --> it element is used to color the first letter of any paragraph.
            2. first line
            3. marker
            4. before
            5. after
            6. selection
________________________________________________________________________

pseudo classes -->
          syntax: 
                        <selector>: <name_of_pseudo_class>

--> it used to define state of html elements. eg.hover, link, focus, click.......
    example:.
                anchor tag <a> 
                anchor tag has its own multiple tags
        1. link
        2. visited
        3. hover
        4. active

  --> order of applying pseudo classes is Important.    
  ________________________________________________________________________

  form :
          pseudo class -->
               1. :required 
               2. :hover
               3. :valid  
               4. :invalid
               5. :disable
               6. :cheacked
               7. :readonly
               8. :read-write
               9. :enable
               10. optional
________________________________________________________________________

attribute selector -->
      syntax [attibutes]

      variants :
        1. selector[attribute_name]
        2. selector [attribute_name=attribute]

        3. selector [attribute_name^=attribute] --> used when something start with
        4. selector [attribute_name$=attribute] --> used when something end with

        5. selector[attribute_name*= attribute] --> used when substring

        6. selector[attribute_name~= attribute] --> used to search the exact value or space sepreted value.

        7. selector[attribute_name |= attribute] --> used when to search yhe exact value and separated value.

________________________________________________________________________________
 
    pseudo classes  : 
                (can be applied to any html element)
        
         1. :first-child
         2. :last-child 
         3. : first-of-type
         4. : last of type
         5. :nth-child() --> it take number and also take value like "even/odd", also it take formulla
         --> formula is = An+b
          here An+b is 
            a -> step size
            n -> number is start from 0,1,2,3,........
            b -> off sets
            remember -> n is start from the 0 but the ui is strt counting from 1
        6. :nth-last-child -->  it take number and also take value like "even/odd", also it take formulla
         --> formula is = An+b
          here An+b is 
            a -> step size
            n -> number is start from 0,1,2,3,........
            b -> off sets
        7. :nth-last-of-type.
        combination of OF-TYPE means it look like for the meantion child irespective of position inside parent only thing matter here is it own order
        8. :nth-first-of-type.


company = xyz
  let us assume u are the first developer of the newton. and u make the font portal of newton school and new school hire 100 developer after a ur page and now  the newton portal modified by the 100 developer. 
 when the 100 developer work on the portal then u can not able to say that to individual developer for to use the any class in your code which is give the expencive look to the newton portal. for this kind of behaviour we use the pseudo classes like :first child , :first-of-type, last of type, etc.

_____________________________________________________________________

specificity : 
  each elements have its own specificity 
   element : 
   inline css - 1000
   id (100) [specificity value] 
   class, pseudo class, attribute selector - 10
   elements pseudo elements - 1

   eg. 
   #dummy div.random:focus{}
   calculate specificity - 100+1+10+10 = 121
_____________________________________________________________________
code is run from top to bottom there is priority.
inline css > internal or external depends on where it is written

colors : 
         1. rgb 
         2. rgba
         3. HEX code
         4. HSL
         5. Hsla

color : red -

 how may ways in which we can represent red color ?
  1. rgb ->
   (red, green, blue)       
    rgb(red, Green, blue)
    range -> 0 - 255


  2. rgba -> 
  extension of rgb only
    a -> alpha
    rgb(red, Green, blue, Alpha)
    alpha -> opacity 
     value of range -> 0 - 1

     the alpha is used to give transpency to rgb.


  3. hex code ->
   color -> #rrggbb;

   range -> 0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f

   this work like -> #00ff00

   shortcut / short hand:
    color rgb -> #rgb
    color -> #0f0
  4. HSL ->
     h -> hue
     s -> saturation
     l -> light

     hue -> represent color -> rgb
      range value -> 0 - 360

      0, 360 -> red
      120    -> green
      240    -> blue
      
      saturation -> degree of greyness.
      percentage -> 0 - 100%

      light -> degree of white/black
      percentage -> 0 - 100%

 5. hsla :- 
    hsla 

    a -> alpha 
    opacity

_____________________________________________________________________

background image :->

  feature ->
  1. background repeat: repeat/not repeat

  2. background-size: cover/contain / auto(Default), single value->
     it take width as a input and height assume as a "auto"

  3. background-position: right/left/right bottom/ bottom/ top left/

  4. background-attachments: fixed / scroll etc. 
  
_____________________________________________________________________

box model : 
 it says every thing is in box in html

 box -> content + padding + border + margin

 content -> actual content
 padding -> distance between contents and border 
 border -> actual border
 margin -> distance between two element

 margin colapse ?
it happen only in vertical scenario.  
which ever value is greatest that will be taken 

margin-bottom: 50px
margin-top: 30px

note : 
 inline elements -> margin top, margin bottom does not work

_____________________________________________________________________


CALCULATION : 
 TWO DIV'S WITH -ID ONE N TWO

 DIV # ONE 
 HOW MUCH IS THE WIDTH ?




WIDTH = content + padding left+ padding RIGHT + border left + border RIGHT   
_____________________________________________________________________

BOX SIZING : 
 HELPS/ALTER TO CALC WIDTH/HEIGHT OF HTML ELEMENTS.

 1. CONTENT-BOX(Default)
 2. border-box

 _____________________________________________________________________

css units :> 
     1. px  - pixel - fixed  (not recommended /  last resort)
     2. em -  size calculation w.r.t parent element
     3. rem  -  size calculation w.r.t root element (html tag if not implemented it will take from browser default -16px) eg. font size, margin, padding
     4. %   - it is used for width/height of html element.
     5. vw  - vw(view width ) -> 1vw -> one view portion of viewport width. 
     6. vh  - vh(view height ) 
     7. ch - it is mostly used for characters eg. after 50 characters it will be return in next line

     broswer default/standrad font size is :  16px 
    
    1 rem is equal to = 16px
    1.2 rem = 1.2 * 16px ->  
    1.5 rem = 1.5 * 16px -> 24px


     rem is better then px beacuse it change the font size on the basis of broswer font size to will add rem in the default font size of browser.

em ->
      size calculation w.r.t parent element

      <div>
          <p>

        p -> font-size : 2rem(2  *  16px) --> 32px

        p -> font size: 1.5em (1.5 *  2rem) -> (1.5 * 2 *  16px) -> 48px
  
_____________________________________________________________________

Text/Typography ->
  1. text-align : center
  2. text-transform : capitalize, upper case, lowercase
  3. White-space: nowrap;
  4. overflow: hidden;
  5.  text-overflow: ellipsis;

  fonts -> 

     1. font-family -> A, B, C, D, E  Where A, B, C, D, E -> fonts -> fallback -> if a is not available in the os, go for b if b is not available in the os,go for c 
     2. font-size
     3. font-weight - to make the text bold, bolder it accepts value like -100,500, 95 
      
    
_____________________________________________________________________
css usage w.r.t Layout ->
 display online : 
   1. block
   2. inline
   3. inline block (new) - mix of inline n block properties 
 
 inline :
  1. start on same line 
  2. only occupy space which is required for it's content 

 Block :  
  1. Start form next line 
  2. Its occies all available all the available width 

 Inline block: 
    Its occies all available all the available width AND Start from Next line (Initially)
    if width is given then its take only that much Space (Just like Inline Element )
    and also it start on the same line (Just like inline Element )

_____________________________________________________________________

position : 
 1. Static (default value )
 2. relative - left, top, bottom,right,  left,
 3. absolute 
 4. fixed 
 5. sticky

 Position:
 1. relatives -> 
     after applying it ,,, used offset -> left, top, bottom,right,  left,
 2. absolute ->
 offset values are relative to nearest positioned parent 
        observation -> 
           1. it gives up the space allocated to the html element
           2. it appears to be Floating over html element 

 3. fixed -> 
    offset value are relatives to viewport.
   observation -> 
           1. almost same as absolute but it's Sticks!(fixed) around during scroll.
           
 4. Sticky -> (COMBINATION OF RELATIVE+fixed)
     observation -> 
           1.   Initially it appears same as position: relative
           2.   Whenever threshold (offset value) is crossed it starts behaving as position fixed.\
      ques-
      what is diff between position fixed b position absolute?
      --> in one it will not scroll, and in one it will 
      --> in fixed offset value are relative to viewport 
          in absolute offset value are relatives to nearest positioned parent .
         
_____________________________________________________________________

Floating :
          when we say positioned elements (absolute, sticky, fixed ) we say these elements are Floating on the top of out html element 
      
